-----------------------------------------------------------
-- GENERATED BY EASYLANG COMPILER.
-- !!!! DON'T MODIFY IT!!!!!!
-----------------------------------------------------------

Sequence = 0
MACDObjects = {}

function SetObject(id, obj)
    print('SetObject', id)
    MACDObjects[id] = obj
end

function RemoveObject(id)
    MACDObjects[id] = nil
end

function GetObject(id)
    print('GetObject', id)
    return MACDObjects(id)
end

function GetObjectCount()
    local count = 0
    for k, v in pairs(MACDObjects) do
        count = count + 1
    end
    return count
end

MACDClass = {}

MACDClass['name'] = 'MACD'
MACDClass['argName'] = {'short', 'long', 'mid'}
MACDClass['short'] = {12.000000, 2.000000, 200.000000}
MACDClass['long'] = {26.000000, 2.000000, 200.000000}
MACDClass['mid'] = {9.000000, 2.000000, 200.000000}
MACDClass['vars'] = {'DIF', 'DEA', 'MACD', '做多', '做空'}
MACDClass['flags'] = {0x00000000, 0x00000000, 0x00000000, 0x00000000, 0x00000000}
MACDClass['color'] = {{Red=-1, Green=-1, Blue=-1}, {Red=-1, Green=-1, Blue=-1}, {Red=-1, Green=-1, Blue=-1}, {Red=-1, Green=-1, Blue=-1}, {Red=-1, Green=-1, Blue=-1}}
MACDClass['lineThick'] = {1, 1, 1, 1, 1}
MACDClass['lineStyle'] = {0, 0, 0, 0, 0}
MACDClass['graphType'] = {1, 1, 2, 1, 1}

function MACDClass:new(data, short, long, mid)
    o = {}
    setmetatable(o, self)
    self.__index = self
    o.__data_code0___ = data


    o.short = Scalar(short)
    o.long = Scalar(long)
    o.mid = Scalar(mid)
    o.var3 = CLOSE(o.__data_code0___)
    o.var4 = EMA(o.var3, o.short)
    o.var5 = EMA(o.var3, o.long)
    o.var6 = SUB(o.var4, o.var5)
    o.dif = o.var6
    o.var7 = EMA(o.dif, o.mid)
    o.dea = o.var7
    o.var8 = SUB(o.dif, o.dea)
    o.const1 = Scalar(2.000000)
    o.var9 = MUL(o.var8, o.const1)
    o.macd = o.var9
    o.var10 = CROSS(o.dif, o.dea)
    o.var1 = o.var10
    o.var11 = CROSS(o.dea, o.dif)
    o.var2 = o.var11

    o.drawTextActions = {

    }

    o.drawIconActions = {

    }

    o.drawLineActions = {

    }

    o.drawKLineActions = {

    }

    o.stickLineActions = {

    }

    o.ployLineActions = {

    }

    o.ref_values = {o.dif, o.dea, o.macd, o.var1, o.var2}

    Sequence = Sequence + 1
    o.__id__ = Sequence

    SetObject(o.__id__, o)

    return o
end

function MACDClass:updateLastValue()
    o.var3.updateLastValue()
    o.var4.updateLastValue()
    o.var5.updateLastValue()
    o.var6.updateLastValue()
    o.var7.updateLastValue()
    o.var8.updateLastValue()
    o.var9.updateLastValue()
    o.var10.updateLastValue()
    o.var11.updateLastValue()
end

function MACDClass:Len()
    return self.__data_code0___.Len()
end


function MACDClass:Get(index)
    return {
        o.dif.Get(index),
        o.dea.Get(index),
        o.macd.Get(index),
        o.var1.Get(index),
        o.var2.Get(index),
    }
end

FormulaClass = MACDClass
	