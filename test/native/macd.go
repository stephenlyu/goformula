//
// GENERATED BY EASYLANG COMPILER.
// !!!! DON'T MODIFY IT!!!!!!
//

package native

import (
	. "github.com/stephenlyu/goformula/stockfunc/function"
	. "github.com/stephenlyu/goformula/function"
	. "github.com/stephenlyu/goformula/formulalibrary/base/formula"
	. "github.com/stephenlyu/goformula/formulalibrary/native/nativeformulas"
)

type macd struct {
	BaseNativeFormula

	// Data of all referenced period


	// Referenced Formulas


	// Vectors
    short Value
    long Value
    mid Value
    var1 Value
    var2 Value
    var3 Value
    var4 Value
    dif Value
    var5 Value
    dea Value
    var6 Value
    const1 Value
    var7 Value
    macd Value
}

var (
	MACD_META = &FormulaMetaImpl{
		Name: "MACD",
		ArgNames: []string{"short", "long", "mid"},
		ArgMeta: []Arg {
			Arg{12.000000, 2.000000, 200.000000},
			Arg{26.000000, 2.000000, 200.000000},
			Arg{9.000000, 2.000000, 200.000000},
		},
		Flags: []int{0x00000000, 0x00000000, 0x00000000},
		Colors: []*Color{{Red:-1, Green:-1, Blue:-1}, {Red:-1, Green:-1, Blue:-1}, {Red:-1, Green:-1, Blue:-1}},
		LineThicks: []int{1, 1, 1},
		LineStyles: []int{0, 0, 0},
		GraphTypes: []int{1, 1, 2},
		Vars: []string{"DIF", "DEA", "MACD"},
	}
)

func NewMACD(data *RVector, args []float64) Formula {
	o := &macd{
		BaseNativeFormula: BaseNativeFormula{
			FormulaMetaImpl: MACD_META,
			Data__: data,
		},
	}

	// Data of all referenced period


	// Referenced Formulas


	// Vectors
    o.short = Scalar(args[0])
    o.long = Scalar(args[1])
    o.mid = Scalar(args[2])
    o.var1 = CLOSE(o.Data__)
    o.var2 = EMA(o.var1, o.short)
    o.var3 = EMA(o.var1, o.long)
    o.var4 = SUB(o.var2, o.var3)
    o.dif = o.var4
    o.var5 = EMA(o.dif, o.mid)
    o.dea = o.var5
    o.var6 = SUB(o.dif, o.dea)
    o.const1 = Scalar(2.000000)
    o.var7 = MUL(o.var6, o.const1)
    o.macd = o.var7

	// Actions

    o.DrawActions__ = []DrawAction{

    }

	o.RefValues__ = []Value {o.dif, o.dea, o.macd}
	return o
}

func (this *macd) UpdateLastValue() {
    this.var1.UpdateLastValue()
    this.var2.UpdateLastValue()
    this.var3.UpdateLastValue()
    this.var4.UpdateLastValue()
    this.var5.UpdateLastValue()
    this.var6.UpdateLastValue()
    this.var7.UpdateLastValue()
}

func init() {
	RegisterNativeFormula(NewMACD, MACD_META)
}

	