//
// GENERATED BY EASYLANG COMPILER.
// !!!! DON'T MODIFY IT!!!!!!
//

package native

import (
	. "github.com/stephenlyu/goformula/stockfunc/function"
	. "github.com/stephenlyu/goformula/function"
	. "github.com/stephenlyu/goformula/formulalibrary/base/formula"
	. "github.com/stephenlyu/goformula/formulalibrary/native/nativeformulas"
)

type ployline struct {
	BaseNativeFormula

	// Data of all referenced period


	// Referenced Formulas


	// Vectors
    var1 Value
    const1 Value
    var2 Value
    var3 Value
    var4 Value
    __anonymous_0 Value
}

var (
	PLOYLINE_META = &FormulaMetaImpl{
		Name: "PLOYLINE",
		ArgNames: []string{},
		ArgMeta: []Arg {

		},
		Flags: []int{0x00000000},
		Colors: []*Color{{Red:255, Green:0, Blue:0}},
		LineThicks: []int{9},
		LineStyles: []int{0},
		GraphTypes: []int{0},
		Vars: []string{""},
	}
)

func NewPLOYLINE(data *RVector, args []float64) Formula {
	o := &ployline{
		BaseNativeFormula: BaseNativeFormula{
			FormulaMetaImpl: PLOYLINE_META,
			Data__: data,
		},
	}

	// Data of all referenced period


	// Referenced Formulas


	// Vectors
    o.var1 = HIGH(o.Data__)
    o.const1 = Scalar(5.000000)
    o.var2 = HHV(o.var1, o.const1)
    o.var3 = GE(o.var1, o.var2)
    o.var4 = PLOYLINE(o.var3, o.var1)
    o.__anonymous_0 = o.var4

	// Actions

    o.DrawActions__ = []DrawAction{
        &PloyLineAction{ActionType:0, Cond:o.var3, Price:o.var1, NoDraw:0, Color:&Color{Red:255, Green:0, Blue:0}, LineThick:9, VarIndex:0},
    }

	o.RefValues__ = []Value {o.__anonymous_0}
	return o
}

func (this *ployline) UpdateLastValue() {
    this.var1.UpdateLastValue()
    this.var2.UpdateLastValue()
    this.var3.UpdateLastValue()
    this.var4.UpdateLastValue()
}

func init() {
	RegisterNativeFormula(NewPLOYLINE, PLOYLINE_META)
}

	